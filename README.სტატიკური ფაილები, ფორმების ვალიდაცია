#myproject/myproject/settings.py
AUTH_USER_MODEL = 'myapp.CustomUser'  

#myproject/myapp/models.py
from django.contrib.auth.models import AbstractUser
from django.db import models

class CustomUser(AbstractUser):
    custom_name = models.CharField(max_length=100)
    custom_mail = models.CharField(max_length=100)
    birth_date = models.DateField(null=True, blank=True)
    
    def __str__(self):
        return self.username
        
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser

#user_management/views.py
from django.shortcuts import render, get_object_or_404, redirect
from .models import CustomUser
from .forms import CustomUserForm

def user_list(request):
    users = CustomUser.objects.all()
    return render(request, 'user_management/user_list.html', {'users': users})

def user_detail(request, pk):
    user = get_object_or_404(CustomUser, pk=pk)
    return render(request, 'user_management/user_detail.html', {'user': user})

def user_create(request):
    if request.method == 'POST':
        form = CustomUserForm(request.POST)
        if form.is_valid():
            user = form.save()
            return redirect('user_detail', pk=user.pk)
    else:
        form = CustomUserForm()
    return render(request, 'user_management/user_form.html', {'form': form})

def user_update(request, pk):
    user = get_object_or_404(CustomUser, pk=pk)
    if request.method == 'POST':
        form = CustomUserForm(request.POST, instance=user)
        if form.is_valid():
            user = form.save()
            return redirect('user_detail', pk=user.pk)
    else:
        form = CustomUserForm(instance=user)
    return render(request, 'user_management/user_form.html', {'form': form})

def user_delete(request, pk):
    user = get_object_or_404(CustomUser, pk=pk)
    if request.method == 'POST':
        user.delete()
        return redirect('user_list')
    return render(request, 'user_management/user_confirm_delete.html', {'user': user})

#user_management/urls.py
from django.urls import path
from .views import user_list, user_detail, user_create, user_update, user_delete

urlpatterns = [
    path('', user_list, name='user_list'),
    path('<int:pk>/', user_detail, name='user_detail'),
    path('new/', user_create, name='user_create'),
    path('<int:pk>/edit/', user_update, name='user_update'),
    path('<int:pk>/delete/', user_delete, name='user_delete'),
]

#myproject/urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('users/', include('user_management.urls')),
]

<!-- user_create.html -->
<form method="post">
    {% csrf_token %}
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required><br>
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required><br>
    <button type="submit">Create User</button>
</form>

<!-- user_detail.html -->
<h2>User Detail</h2>
<p>Username: {{ user.username }}</p>
<a href="{% url 'user_update' user.id %}">Edit</a>
<a href="{% url 'user_delete' user.id %}">Delete</a>

<!-- user_confirm_delete.html -->
<h2>Confirm Delete</h2>
<p>Are you sure you want to delete user "{{ user.username }}"?</p>
<form method="post">
    {% csrf_token %}
    <button type="submit">Yes, Delete</button>
</form>
